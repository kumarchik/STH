from pygame import Rect, transform, image
# Пояснення: Імпортуємо необхідні класи та функції з Pygame:
# **Rect**: Для створення та маніпулювання прямокутниками (області клавіш).
# **transform**: Для зміни розміру зображень.
# **image**: Для завантаження зображень.
from effects import draw_key_effect, spawn_flying_note, update_and_draw_flying_notes
# Пояснення: Імпортуємо функції, що відповідають за візуальні ефекти нот/клавіш.
# draw_key_effect: (Якщо б використовувалась) Малює натиснутий/ненатиснутий стан.
# **spawn_flying_note**: Ініціалізує нову "літаючу" ноту над клавішею.
# **update_and_draw_flying_notes**: Анімує та малює всі активні літаючі ноти.
from settings import KEYS
# Пояснення: Імпортуємо константу KEYS (ймовірно, список чи словник, що описує клавіші).

# --- КАРТИНКИ ---
KEY_UNPRESSED = transform.scale(image.load('assets/images/key_unpressed.png'), (100, 250))
# Пояснення: Завантажуємо зображення ненатиснутої клавіші, змінюємо його розмір до 100x250 пікселів 
# та зберігаємо у змінну. Це зображення буде основою для малювання клавіш.

# Відповідність індексу клавіші ноті (для всіх клавіш із KEYS)
NOTE_BY_INDEX = {
    0: 'C',
    1: 'D',
    2: 'E',
    3: 'F',
    4: 'G',
    5: 'A',
    6: 'B',
}
# Пояснення: Словник, який зіставляє числовий індекс клавіші (від 0 до 6) з її музичною назвою ('C' до 'B').
# Це дозволяє ідентифікувати ноту, коли відомий лише індекс клавіші.

_PREV_PRESSED = set()
# Пояснення: **Глобальна змінна** (множина), яка зберігає індекси клавіш, які були **натиснуті** # під час **попереднього** кадру/виклику функції `draw_keys`. 
# Використовується для визначення моменту **щойно натиснутої** клавіші (on press).

def draw_keys(screen, key_rects, pressed_keys):
    # Пояснення: Основна функція для малювання клавіш і керування ефектами нот.
    # screen: Поверхня Pygame для малювання.
    # key_rects: Список об'єктів Rect, що визначають позицію та розмір кожної клавіші.
    # pressed_keys: Список індексів клавіш, які **натиснуті** в поточному кадрі.
    global _PREV_PRESSED
    pressed_set = set(pressed_keys) # Перетворюємо список на множину для швидкого пошуку.

    for i, rect in enumerate(key_rects):
        is_pressed = i in pressed_set # Перевіряємо, чи натиснута поточна клавіша за її індексом i.
        
        # Малюємо базове зображення клавіші (KEY_UNPRESSED)
        screen.blit(KEY_UNPRESSED, (rect.x, rect.y))
        
        # Тут можна було б викликати draw_key_effect(screen, rect, is_pressed), 
        # але в цьому коді використовується лише базова картинка.

        # Викликаємо spawn_flying_note для кожної натиснутої клавіші, якщо вона щойно натиснута
        # Умова активації ефекту: Клавіша натиснута ЗАРАЗ (is_pressed) І не була натиснута на попередньому кадрі (i not in _PREV_PRESSED).
        if is_pressed and i not in _PREV_PRESSED:
            
            # Отримуємо ім'я ноти для поточної клавіші
            note_name = NOTE_BY_INDEX.get(i)
            if note_name:
                # Створюємо нову літаючу ноту над прямокутником клавіші з відповідною назвою.
                spawn_flying_note(rect, note_name)

    _PREV_PRESSED = pressed_set # Оновлюємо множину попередньо натиснутих клавіш для наступного кадру.

    # Оновлюємо позиції та малюємо всі літаючі ноти, а також видаляємо ті, що вийшли за екран.
    update_and_draw_flying_notes(screen)

def create_key_rects(num_keys, start_x=50, start_y=100, key_width=100, key_height=250):
    # Пояснення: Функція-фабрика, яка створює прямокутники Pygame для кожної клавіші.
    # num_keys: Кількість клавіш для створення.
    # start_x/start_y: Координати першої клавіші.
    # key_width/key_height: Розміри клавіші.
    rects = []
    for i in range(num_keys):
        # Обчислюємо X-координату: початкова X + (індекс * ширина клавіші)
        x = start_x + i * key_width
        # Створюємо об'єкт Rect і додаємо його до списку.
        rects.append(Rect(x, start_y, key_width, key_height))
    return rects # Повертаємо список прямокутників, які визначають положення клавіш.